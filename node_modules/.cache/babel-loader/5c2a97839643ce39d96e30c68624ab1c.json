{"ast":null,"code":"import _classCallCheck from \"/Users/kevindavis/Projects/elf-computers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevindavis/Projects/elf-computers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevindavis/Projects/elf-computers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevindavis/Projects/elf-computers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevindavis/Projects/elf-computers/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevindavis/Projects/elf-computers/src/App.js\";\nimport React, { Component } from 'react';\nimport CartTotal from \"./CartDisplay/CartTotal/CartTotal\";\nimport Options from \"./Options/Options\"; // Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\n\nimport slugify from 'slugify';\nimport './App.css';\nimport CartDisplay from \"./CartDisplay/CartDisplay\"; // This object will allow us to\n// easily convert numbers into US dollar values\n\nvar USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: {\n        Processor: {\n          name: '17th Generation Intel Core HB (7 Core with donut spare)',\n          cost: 700\n        },\n        'Operating System': {\n          name: 'Ubuntu Linux 16.04',\n          cost: 200\n        },\n        'Video Card': {\n          name: 'Toyota Corolla 1.5v',\n          cost: 1150.98\n        },\n        Display: {\n          name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n          cost: 1500\n        }\n      }\n    };\n\n    _this.updateFeature = function (feature, newValue) {\n      var selected = Object.assign({}, _this.state.selected);\n      selected[feature] = newValue;\n\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      /* const features = Object.keys(this.props.features).map((feature, idx) => {\n         const featureHash = feature + '-' + idx;\n         const options = this.props.features[feature].map(item => {\n           const itemHash = slugify(JSON.stringify(item));\n           return (\n             <div key={itemHash} className=\"feature__item\">\n               <input\n                 type=\"radio\"\n                 id={itemHash}\n                 className=\"feature__option\"\n                 name={slugify(feature)}\n                 checked={item.name === this.state.selected[feature].name}\n                 onChange={e => this.updateFeature(feature, item)}\n               />\n               <label htmlFor={itemHash} className=\"feature__label\">\n                 {item.name} ({USCurrencyFormat.format(item.cost)})\n               </label>\n             </div>\n           );\n         });\n          return (\n           <fieldset className=\"feature\" key={featureHash}>\n             <legend className=\"feature__name\">\n               <h3>{feature}</h3>\n             </legend>\n             {options}\n           </fieldset>\n         );\n       });*/\n\n      /*const summary = Object.keys(this.state.selected).map((feature, idx) => {\n        const featureHash = feature + '-' + idx;\n        const selectedOption = this.state.selected[feature];\n         return (\n          <div className=\"summary__option\" key={featureHash}>\n            <div className=\"summary__option__label\">{feature} </div>\n            <div className=\"summary__option__value\">{selectedOption.name}</div>\n            <div className=\"summary__option__cost\">\n              {USCurrencyFormat.format(selectedOption.cost)}\n            </div>\n          </div>\n        );\n      });*/\n\n      /*const total = Object.keys(this.state.selected).reduce(\n        (acc, curr) => acc + this.state.selected[curr].cost,\n        0\n      );*/\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"ELF Computing | Laptops\")), React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"main__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Customize your laptop\"), React.createElement(Options, {\n        selected: this.state.selected,\n        USCurrencyFormat: USCurrencyFormat,\n        features: this.props.features,\n        updateFeature: updateFeature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"main__summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Your cart\"), React.createElement(CartDisplay, {\n        selected: this.state.selected,\n        USCurrencyFormat: USCurrencyFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(CartTotal, {\n        selected: this.state.selected,\n        USCurrencyFormat: USCurrencyFormat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/kevindavis/Projects/elf-computers/src/App.js"],"names":["React","Component","CartTotal","Options","slugify","CartDisplay","USCurrencyFormat","Intl","NumberFormat","style","currency","App","state","selected","Processor","name","cost","Display","updateFeature","feature","newValue","Object","assign","setState","props","features"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAGA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;;AACA,IAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACtDC,EAAAA,KAAK,EAAE,UAD+C;AAEtDC,EAAAA,QAAQ,EAAE;AAF4C,CAA/B,CAAzB;;IAKMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAE,yDADG;AAETC,UAAAA,IAAI,EAAE;AAFG,SADH;AAKR,4BAAoB;AAClBD,UAAAA,IAAI,EAAE,oBADY;AAElBC,UAAAA,IAAI,EAAE;AAFY,SALZ;AASR,sBAAc;AACZD,UAAAA,IAAI,EAAE,qBADM;AAEZC,UAAAA,IAAI,EAAE;AAFM,SATN;AAaRC,QAAAA,OAAO,EAAE;AACPF,UAAAA,IAAI,EAAE,sDADC;AAEPC,UAAAA,IAAI,EAAE;AAFC;AAbD;AADJ,K;;UAqBRE,a,GAAgB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACrC,UAAMP,QAAQ,GAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKV,KAAL,CAAWC,QAA7B,CAAjB;AACAA,MAAAA,QAAQ,CAACM,OAAD,CAAR,GAAoBC,QAApB;;AACA,YAAKG,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,K;;;;;;;6BAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BC;;;;;;;;;;;;;;AAeA;;;;AAKA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAA9B;AAAwC,QAAA,gBAAgB,EAAGP,gBAA3D;AAA6E,QAAA,QAAQ,EAAE,KAAKkB,KAAL,CAAWC,QAAlG;AAA4G,QAAA,aAAa,EAAEP,aAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAAlC;AAA4C,QAAA,gBAAgB,EAAGP,gBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,QAAhC;AAA0C,QAAA,gBAAgB,EAAGP,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CALF,CAJF,CADF;AAyBD;;;;EA3GeL,S;;AA8GlB,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport CartTotal from \"./CartDisplay/CartTotal/CartTotal\";\nimport Options from \"./Options/Options\";\n\n\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\nimport './App.css';\nimport CartDisplay from \"./CartDisplay/CartDisplay\";\n\n// This object will allow us to\n// easily convert numbers into US dollar values\nconst USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nclass App extends Component {\n  state = {\n    selected: {\n      Processor: {\n        name: '17th Generation Intel Core HB (7 Core with donut spare)',\n        cost: 700\n      },\n      'Operating System': {\n        name: 'Ubuntu Linux 16.04',\n        cost: 200\n      },\n      'Video Card': {\n        name: 'Toyota Corolla 1.5v',\n        cost: 1150.98\n      },\n      Display: {\n        name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n        cost: 1500\n      }\n    }\n  };\n\n  updateFeature = (feature, newValue) => {\n    const selected = Object.assign({}, this.state.selected);\n    selected[feature] = newValue;\n    this.setState({\n      selected\n    });\n  };\n\n  render() {\n   /* const features = Object.keys(this.props.features).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const options = this.props.features[feature].map(item => {\n        const itemHash = slugify(JSON.stringify(item));\n        return (\n          <div key={itemHash} className=\"feature__item\">\n            <input\n              type=\"radio\"\n              id={itemHash}\n              className=\"feature__option\"\n              name={slugify(feature)}\n              checked={item.name === this.state.selected[feature].name}\n              onChange={e => this.updateFeature(feature, item)}\n            />\n            <label htmlFor={itemHash} className=\"feature__label\">\n              {item.name} ({USCurrencyFormat.format(item.cost)})\n            </label>\n          </div>\n        );\n      });\n\n      return (\n        <fieldset className=\"feature\" key={featureHash}>\n          <legend className=\"feature__name\">\n            <h3>{feature}</h3>\n          </legend>\n          {options}\n        </fieldset>\n      );\n    });*/\n\n    /*const summary = Object.keys(this.state.selected).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const selectedOption = this.state.selected[feature];\n\n      return (\n        <div className=\"summary__option\" key={featureHash}>\n          <div className=\"summary__option__label\">{feature} </div>\n          <div className=\"summary__option__value\">{selectedOption.name}</div>\n          <div className=\"summary__option__cost\">\n            {USCurrencyFormat.format(selectedOption.cost)}\n          </div>\n        </div>\n      );\n    });*/\n\n    /*const total = Object.keys(this.state.selected).reduce(\n      (acc, curr) => acc + this.state.selected[curr].cost,\n      0\n    );*/\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>ELF Computing | Laptops</h1>\n        </header>\n        <main>\n          <form className=\"main__form\">\n            <h2>Customize your laptop</h2>\n            <Options selected={this.state.selected} USCurrencyFormat= {USCurrencyFormat} features={this.props.features} updateFeature={updateFeature} />\n          </form>\n          <section className=\"main__summary\">\n            <h2>Your cart</h2>\n            {/*{summary}*/}\n            <CartDisplay selected={this.state.selected} USCurrencyFormat= {USCurrencyFormat} />\n            <CartTotal selected={this.state.selected} USCurrencyFormat= {USCurrencyFormat} />\n           {/* <div className=\"summary__total\">\n              <div className=\"summary__total__label\">Total</div>\n              <div className=\"summary__total__value\">\n                {USCurrencyFormat.format(total)}\n              </div>\n            </div>*/}\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}